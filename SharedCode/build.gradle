apply plugin: 'com.android.library'
apply plugin: 'kotlin-multiplatform'
apply plugin: 'kotlinx-serialization'
apply plugin: 'org.jetbrains.kotlin.native.cocoapods'
apply plugin: "com.squareup.sqldelight"

// CocoaPods requires the podspec to have a version.
version = "1.0"


android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
}


kotlin {
    targets {
        jvm()
        final def iOSTarget = System.getenv('SDK_NAME')?.startsWith("iphoneos") \
                              ? presets.iosArm64 : presets.iosX64

        fromPreset(iOSTarget, 'iOS') {
            binaries {
                framework('common')
            }
        }

        macosX64("macOS")
        android()
        jvm()
    }

    js {
        browser {
        }
    }


    cocoapods {
        // Configure fields required by CocoaPods.
        summary = "Some description for a Kotlin/Native module"
        homepage = "Link to a Kotlin/Native module homepage"
    }


    sourceSets {
        commonMain.dependencies {
            // Coroutines
            implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.kotlinCoroutines}") {
                force = true
            }

            // Ktor
            implementation("io.ktor:ktor-client-core:${Versions.ktor}")
            implementation("io.ktor:ktor-client-json:${Versions.ktor}")
            implementation("io.ktor:ktor-client-logging:${Versions.ktor}")
            implementation("io.ktor:ktor-client-serialization:${Versions.ktor}")

            // Serialize
            implementation("org.jetbrains.kotlinx:kotlinx-serialization-core:${Versions.kotlinxSerialization}")

            // SQL Delight
            implementation("com.squareup.sqldelight:runtime:${Versions.sqlDelight}")
            implementation("com.squareup.sqldelight:coroutines-extensions:${Versions.sqlDelight}")

            // koin
            api("org.koin:koin-core:${Versions.koin}")

            api(Deps.multiplatformSettings)
            api(Deps.kermit)
            api(Deps.kotlinxDateTime)
        }

        androidMain.dependencies {
            implementation("io.ktor:ktor-client-android:${Versions.ktor}")
            implementation("com.squareup.sqldelight:android-driver:${Versions.sqlDelight}")
        }

        iOSMain.dependencies {
            implementation("io.ktor:ktor-client-ios:${Versions.ktor}")
            implementation("com.squareup.sqldelight:native-driver:${Versions.sqlDelight}")
        }

        macOSMain.dependencies {
            implementation("io.ktor:ktor-client-ios:${Versions.ktor}")
            implementation("com.squareup.sqldelight:native-driver-macosx64:${Versions.sqlDelight}")
        }


        jvmMain.dependencies {
            implementation("io.ktor:ktor-client-apache:${Versions.ktor}")
            //implementation(Ktor.slf4j)
            //implementation("org.xerial:sqlite-jdbc:${Versions.sqliteJdbcDriver}")
            implementation("com.squareup.sqldelight:sqlite-driver:${Versions.sqlDelight}")
        }

        jsMain.dependencies {
            implementation("io.ktor:ktor-client-js:${Versions.ktor}")
        }

    }
}

// workaround for https://youtrack.jetbrains.com/issue/KT-27170
configurations {
    compileClasspath
}


sqldelight {
    MyDatabase {
        packageName = "com.surrus.galwaybus.db"
        sourceFolders = ["sqldelight"]
    }
}

